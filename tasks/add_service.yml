---

- name: Check connection to consul backend
  wait_for: host={{ nginx_docker_consul_host }} port={{ nginx_docker_consul_port }} timeout=60

- name: Create nginx servers config
  template: 
    src:  nginx-server.conf.j2 
    dest: "{{ nginx_docker_conf_dir }}/servers/{{ nginx_docker_conf_name }}.conf"

- name: Create consul-template templates of nginx include and upstream config for service
  template:
    src:  nginx-{{ item }}.conf.ctmpl.j2
    dest: "{{ nginx_docker_templates[item].ctmpl }}"
  with_items:
    - include
    - upstream

- name: Check version of consul-template
  command: consul-template -v
  register: ct

#- debug: var=ct
#- debug: msg="{{ ct.stderr.split(' ')[1]|version_compare('v0.16.0', '<=') }}"

- name: Set consul-template consul agent address flag
  set_fact:
    _consul_addr_flag: "-consul"
  when: ct.stderr.split(" ")[1]|version_compare('v0.16.0', '<=')

#- debug: msg="{{ _consul_addr_flag|default('-consul-addr') }}"

- name: Render consul-template templates of nginx include and upstream config for service
  shell: >
    consul-template \
      {{ _consul_addr_flag|default('-consul-addr') }} "{{ nginx_docker_consul_host }}:{{ nginx_docker_consul_port }}" \
      -template "{{ item.value.ctmpl }}:{{ item.value.conf }}:docker kill -s HUP nginx" \
      -once
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  with_dict: "{{ nginx_docker_templates }}"
